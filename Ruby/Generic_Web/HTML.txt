Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2012-06-24T12:08:44+08:00

====== HTML ======
Created 星期日 24 六月 2012



===== DOCTYPE =====

**<!** DOCTYPE html>	声明html类型	#默认是HTML5


===== <HTML> =====
	'''
	dir
	lang
	'''
xhtml专有：
	'''
	xml:lang
	xmlns
	'''


===== HEAD =====

==== <meta> 和 content type ====

	* name: 和content关联的"键名"。常用的有：keywords, description,author
	* http-eqiv: 把content的值关联到HTTP response中。这样可以被其他文件（如rails)获取。常用的是Content-type，对应的值一般是"text/html；charset=UTF-8"。另一个有意思的名称是"refresh"，会要求浏览器在指定的时间间隔后刷新页面(得看网站真的需要吗？)
	* content: “键值”

CRAN 上利用refresh来自动跳转：间隔0秒跳转到 URL。
''<meta http-eqiv="refresh" content="0;''**URL='' "**''  />''

**MIME type**

* xhtml 应该是 application/xml+xhtml。但是IE不能正确识别，所以就写成text/html了。

==== <style> ====
''<style type="text/css" media="all" > </style>''

==== <link> ====
''<link href="" rel="stylesheet" type="text/css" media="all" >''

==== <script> ====
<scrupt src="" type="text/javascript">	

==== <base> ====
给所有路径(如链接，文件）设置默认href路径 或者 默认target。

必须属性：
	href: 链接文存放件的目标路径，这样就会在这个文件夹下寻找链接的文件
	taget: _top, _blank, ...


==== <title> ====
	文档标题。显示在标题栏。


===== <body> =====
* **里面应该只包含块级元素。**
* all smaller bits of elements need to be packed in their own containers.

===== ID 和class =====
* a single element may belong to more than one class, with mutlple class names separated by spaces in attribute value.一个标签可以同时有多个class/id，其间用空格分开

===== Tags =====

==== Block elements ====

=== <p> ===
* 有时候用空的<p></p>来增加段落间距。这个方法不纯正，是个trick。

=== <h1>,<h2>,... ===

* h1 是文档中最重要的部分，应该只有一个。
* 保持顺序


=== 列表 ===

== dl>dt+dd ==
“定义列表”。项目列表的一种。
dt: 条目名称
dd: 定义部分

== <ol>+<li> ==

== <ul>+<li> ==
* ul 是块级元素，内部只能有<li>


=== <div> ===
* 是一个块级元素。唯一的表现是前后各一个换行符
* 结合CSS使用。

=== <pre> ===
* 块级元素
* 内部只能有inline元素，不能有块级元素

=== <address> ===
* 块级元素
* 内部只能有inline元素，不能有块级元素


=== <br> ===
HTML和XHTML的差异：
	在 HTML 中，<br> 标签没有结束标签。在 XHTML 中，<br> 标签必须被正确地关闭，比如这样：<br />。


=== <hr> ===
* 宽度对于 width参数
* TODO： 高度怎么设？

=== <blockquote> ===
	* 缩进

==== phrase elements ====

<dfn>
	用于初次出现的名字术语。经常斜体表示。

''<abbr>和<acronym>''
前者不可读，后者可以很自然的读出。

''<span>''
标签被用来组合文档中的行内元素。
* span 没有固定的格式表现.当对它应用样式时，它才会产生视觉上的变化


=== presentation elements ===
''<em>''
	强调。一般显示为斜体。
''<strong>''
	比<em>更强烈的强调。一般会显示为黑体。
''<small>和<big>''
''<b>,<i>, <tt>''
<sup>, <sub> 

=== 行内引用 ===
''<cite>''
	一般是斜体形式。
''<q>''
	正体形式，会在周围自动加上引号。


=== 代码相关 ===
经常和<pre>标签结合使用，以保留空格。

''<code>''
	程序代码
''<kbd>''
	键盘组合
''<samp>''
	程序结果
''<var>''
	变量名
	

==== 链接外部元素 ====

=== <a> ===
* 通过使用 href 属性，创建指向另外一个文档的链接（或超链接）
* 通过使用 name 或 id 属性，创建一个文档内部的书签(anchor)（也就是说，可以创建指向文档片段的链接）
* href可以是  MAILTO: exmaple@example.com 或其他协议。
* taget: 在何处打开目标 URL。
	    _blank
	    _self 		#默认
	    _top
	    framename


=== <img> ===
	<img> 标签创建的是被引用图像的占位空间。
	必须属性
		src
		alt
	可选属性
		height, width
		usemap: 将图像定义为客户器端图像映射。
		ismap： 将图像定义为服务器端图像映射。
* 关于尺寸：浏览器抓取图片是在html页面之后进行的，如果不设置width和height，一开始图片会不占用空间，加载完成时才占用和自身尺寸等大的空间。期间，网页布局可能会受到影响。
* 最好设置width/height为和图像本身尺寸相同。最好在使用图像编辑软件改变大小后使用。

=== <map> 和 <area> ===
图像映射
<map>定义一个map，<area>描述一个区域。

==== 多媒体 ====

=== 音频 ===

=== 视频 ===
	TODO: object 和 param 标签。


==== 表格 ====

=== <table> ===
边框
''border: 宽度值，以像素为单位。下面两个属性都需要border!=none''
''frame: 外框。可选值：''**none, box, hsides, above, below, vsides**
''rules: Specifies the horizontal and vertical divider lines. Possible values are ''**all, cols, groups, none, and rows.**
形状相关：
''width''
''cellpadding, cellspacing''

=== <caption> ===

=== <tr> ===

=== <th>, <td>, ===
'''
对齐：
'''

	align
	valign
	char: 按照字符对齐，例如按小数点对齐。
	charoff
跨度
	colspan,rowspan： 数字。跨越的单元格数目。
	

=== <col><colgroup> ===
* 用 <col>来代表实际的列
* 一个colgroup有多个col组成。
主要属性：
	span: 包含的列数。
	对齐相关: align, char, valign
	width
例如
'''
<table>
'''
	**<colgroup>**
		**<col width="33"/>**
		**<col width="33"/>**
		**<col width="34"/>**
	**</colgroup>**
	''<tr>''
		'''
		<td>Row 1 Cell 1</td>
		<td>Row 1 Cell 2</td>
		<td>Row 1 Cell 3</td>
		'''
	'''
	</tr>
	<tr>
	'''
		'''
		<td>Row 2 Cell 1</td>
		<td>Row 2 Cell 2</td>
		<td>Row 2 Cell 3</td>
		'''
	'''
	</tr>
	</table>
	'''

=== <thead>，<tbody>，<tfoot> ===
* **thead, tfoot, and tbody 必须按照这个顺序列出。**
* 是在tr之上的一个组织层次，但使用不多。


* use "&nbsp;"(non breaking space) to handle cells that have no content.
* td, th的scope属性：Specifies if a cell provides header information for the rest of the row that contains
it or for the rest of the column. Valid values are col, colgroup, row, and rowgroup. 这是一个为nonvisual浏览器提供逻辑信息的可选属性。


==== 表单 ====

* 表单元素很多是inline的。

=== <form> ===
	action: form handler 的地址
	method: get, post, put
	enctype: 当有 file 控件时，使用enctype=multpart/form_data


=== <label> ===
	for: 所指示元素的**ID**
	表示一个label指示一个控件：
		1. 可以把控件元素包含在label里面。
		2. 使用for参数。

=== <input> ===
根据不同的 type 属性值，输入字段拥有很多种形式。输入控件可以是文本字段、复选框、掩码后的文本控件、单选按钮、按钮等等。
	
	id: **因为label需要ID，所以需加label的元素应设置id。**
	name: 必备, 键值对中的键名。
	value: (初始)值。
	placeholder: IE浏览器还不支持！？
	type: 
		submit
		text
		password
		url
		radio
		checkbox
		file
		button
	状态：
		disabled
		checked: radio,checkbox
		selected: 对下拉菜单中的option。
		readonly="readonly": 只读。对文本域。
	限制
		maxlength:文本域内可输入的最长字符数。
		size:  文本域，文件域的宽度。单位是字符数。
		accept: 对input[type="file"]，可接受的文件类型MIME列表，逗号分割。例如：image/gif, image/jpeg, image/png


== 文本域 ==
	maxlength
	size
	disabled
	value: 初始值。例如当修改个人信息时，表单用个人信息填充。
	name
	id
	placeholder
	readonly


== checkbox ==
	value: 选中后会提交的值。
		如果没有value，那么会传递"on"/"off"。
	checked="checked"


== radio ==
	value
	checked="checked"


== file ==
	size
	accept: 可接受的MIME类型 ，逗号分割。


== hidden ==
	隐藏字段，会跟着提交但不可见。
	name
	value
	* 当随着表单传递一些必须的信息，且不想让用户改动时，这个尤其有用。

== submit ==
	value: 按钮上的文字


== reset ==
	"经验说明，这键用途有限。"


== image ==
	和submit作用相同，用图像而不是按钮。
	


=== <select>, <option>, <optgroup> 标签 ===
	select 参数：
		name：必选
		multiple
		最好用CSS定义尺寸。
	option参数：
		selected
		value：如果没有则默认为显示的option内容。
		disabled="disabled" 将会显示为灰色，而不可选。
	optgroup
		label: 必选
		disabled="disabled" 整个组内的选项都不可选。


=== <fieldset>, <legend> ===


=== <textarea>标签 ===
	参数
		rows, cols 
	* 在CSS中也可用width/height定义。
	
	disabled="disabled"
	readonly="readonly"

	* 不是空元素，需要结束标签。标签之间的内容显示在文本域中。

=== <button> 标签 ===
**相当于整合了input里三种按钮的功能(submit, reset, image)**
* 标签内部的内容将显示在按钮上。
* 更多用于执行客户端动作的按钮或者执行单一动作的按钮，而不是用于提交表单信息。这是因为不同浏览器会提交不同的内容。input(type="submit")是专门用于收集信息的。
属性：
	disabled
	name
	__type	: button, submit, reset__


===== 属性 =====

==== id 和 name ====
id 用来给元素唯一的标识。也顺便给元素添加了anchor。
name主要用于表单元素以及给元素添加anchor。

